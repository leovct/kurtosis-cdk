---
name: Set up Kurtosis CDK environment

# Reusable workflow
on:
  workflow_call:
    inputs:
      runner_os:
        description: The OS of the runner to use for the job
        required: true
        type: string

env:
  KURTOSIS_VERSION: 0.89.3

jobs:
  setup:
    runs-on: ${{ inputs.runner_os }}
    steps:
      # Install kurtosis
      - name: Install kurtosis (ubuntu)
        if: contains(inputs.runner_os, 'ubuntu')
        run: |
          echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
          sudo apt update
          sudo apt install kurtosis-cli=${{ env.KURTOSIS_VERSION }}

      - name: Install kurtosis (macOS)
        if: contains(inputs.runner_os, 'macos')
        run: brew install kurtosis-tech/tap/kurtosis-cli@${{ env.KURTOSIS_VERSION }}

      - name: Display kurtosis version
        run: kurtosis version

      - name: Disable kurtosis analytics
        run: kurtosis analytics disable

      # Install yq
      - name: Install yq (ubuntu)
        if: contains(inputs.runner_os, 'ubuntu')
        run: pip3 install yq

      - name: Install yq (macos)
        if: contains(inputs.runner_os, 'macos')
        run: |
          python3 -m venv ${{ github.workspace }}
          source ${{ github.workspace }}/bin/activate
          python3 -m pip install yq

      - name: Display yq version
        run: yq --version

      # Install foundry
      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@v1

      # Setup docker
      - name: Setup docker (macOS)
        if: contains(inputs.runner_os, 'macos')
        run: |
          # Install docker
          brew install --cask docker

          # Start colima
          colima start
          # For testcontainers to find the Colima socket
          # https://github.com/abiosoft/colima/blob/main/docs/FAQ.md#cannot-connect-to-the-docker-daemon-at-unixvarrundockersock-is-the-docker-daemon-running
          sudo ln -sf $HOME/.colima/default/docker.sock /var/run/docker.sock

          # Test the setup
          docker run hello-world
